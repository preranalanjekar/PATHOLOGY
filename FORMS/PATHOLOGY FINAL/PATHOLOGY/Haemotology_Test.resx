<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAgEAAAAAAAD/7gAOQWRvYmUAZAAAAAAB/+wAEUR1Y2t5AAEABAAAADwAAP/bAEMA
        BgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoKDBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8f
        Hx8fH//bAEMBBwcHDQwNGBAQGBoVERUaHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f
        Hx8fHx8fHx8fHx8fH//AABEIAHEAqgMBEQACEQEDEQH/xAAfAAABBQEBAQEBAQAAAAAAAAAAAQIDBAUG
        BwgJCgv/xAC1EAACAQMDAgQDBQUEBAAAAX0BAgMABBEFEiExQQYTUWEHInEUMoGRoQgjQrHBFVLR8CQz
        YnKCCQoWFxgZGiUmJygpKjQ1Njc4OTpDREVGR0hJSlNUVVZXWFlaY2RlZmdoaWpzdHV2d3h5eoOEhYaH
        iImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4eLj5OXm5+jp6vHy
        8/T19vf4+fr/xAAfAQADAQEBAQEBAQEBAAAAAAAAAQIDBAUGBwgJCgv/xAC1EQACAQIEBAMEBwUEBAAB
        AncAAQIDEQQFITEGEkFRB2FxEyIygQgUQpGhscEJIzNS8BVictEKFiQ04SXxFxgZGiYnKCkqNTY3ODk6
        Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqCg4SFhoeIiYqSk5SVlpeYmZqio6Slpqeoqaqy
        s7S1tre4ubrCw8TFxsfIycrS09TV1tfY2dri4+Tl5ufo6ery8/T19vf4+fr/2gAMAwEAAhEDEQA/AOrs
        LOQ+J7uK78zfZyFvIBG5iD2Hevm6UF7RqXQ+urVP3MXH7S3Pa9McvaIxVlJUHa4wwyOhFfRQd0fKTVmW
        ZRlabJQz/liB7Uh9Tm9G8T6VqWsalpdqJPtOmsBcllwhJOPlb61zU8RGcnFbxO6vgqlOnCpK3LPY3kLG
        M7sZyQMHPArdM42jjpvDiW/juLUrHRrJFnt5WutY2jz1uG+VRtyM7h1wOfWuWUZKpola2/mepHE82GcZ
        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
        ACgAoAKACgAoAKAP/9k=
</value>
  </data>
</root>