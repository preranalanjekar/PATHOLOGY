<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEASABIAAD/2wBDAAoHBwgHBgoICAgLCgoLDhgQDg0NDh0VFhEYIx8lJCIfIiEm
        KzcvJik0KSEiMEExNDk7Pj4+JS5ESUM8SDc9Pjv/2wBDAQoLCw4NDhwQEBw7KCIoOzs7Ozs7Ozs7Ozs7
        Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozv/wAARCABzAKoDAREAAhEBAxEB/8QA
        HwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIh
        MUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVW
        V1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXG
        x8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQF
        BgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAV
        YnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOE
        hYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq
        8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD2GkIKAEoAOvSgAoGFABQAtAilqGppYrgIZZSPlRf6+lZzqKJr
        CDkcrc+N7u11GOCWKP58jy4wSfzrH2knrc19nFaDH1+4vZsuxjU/7W3+hrGcru7NYxS2On0i5Z4wjSF+
        ONxz+taUpu9jGrHqagORXYnc5xaACgAyB1NADGniT70ij8aAIH1K0j6yj8BSuOzKsniGyj6Et+IFFwsV
        JPFKD/VW5b8Sf5ClcfKVv+EoumlAEEaj0Ydf1zRdj5Sz/a8zci4Zc848hTj8c0XFY3aogQnvQB5p4r+K
        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
</value>
  </data>
</root>