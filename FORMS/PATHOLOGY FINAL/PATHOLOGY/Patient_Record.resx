<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEASABIAAD/2wBDAAoHBwgHBgoICAgLCgoLDhgQDg0NDh0VFhEYIx8lJCIfIiEm
        KzcvJik0KSEiMEExNDk7Pj4+JS5ESUM8SDc9Pjv/2wBDAQoLCw4NDhwQEBw7KCIoOzs7Ozs7Ozs7Ozs7
        Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozv/wAARCACqAIADAREAAhEBAxEB/8QA
        HwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIh
        MUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVW
        V1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXG
        x8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQF
        BgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAV
        YnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOE
        hYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq
        8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD1OgANACrQBlauDHdWrxkoxfJI9QQP5Gglm7D92gozL+Qi7dfT
        /CglkBORQBC3XFAiN1FAyq0Mks/lJsAK5BbPX/OKynPlHGNyEoQvK4YHBHv3qk7q5LVgCHyy2BwcUxCZ
        PFADJyRGetAGTMPmJ5qhMLNNwZyCMnv+FNEs9F7UjcU0AKKAMzWB+/tfq381pEs2Yfu0yjM1GMSXEpRs
        lSAw7jiqRm9ysMheTUjGFS31FAEbj3oAgdvLZZQeYzn8O9Z1I3VhxdncS9ULMWH3ZRuH17/0rOk9LFTW
        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
</value>
  </data>
</root>