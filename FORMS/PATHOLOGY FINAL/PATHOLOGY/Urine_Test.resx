<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEASABIAAD/2wBDAAoHBwgHBgoICAgLCgoLDhgQDg0NDh0VFhEYIx8lJCIfIiEm
        KzcvJik0KSEiMEExNDk7Pj4+JS5ESUM8SDc9Pjv/2wBDAQoLCw4NDhwQEBw7KCIoOzs7Ozs7Ozs7Ozs7
        Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozv/wAARCACqAHEDAREAAhEBAxEB/8QA
        HwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIh
        MUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVW
        V1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXG
        x8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQF
        BgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAV
        YnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOE
        hYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq
        8vP09fb3+Pn6/9oADAMBAAIRAxEAPwDymkSFMAoAKACgBKACgBaACkAlMAoAWgAoASgAoAWgAoAKAEoA
        WgAoAKQBQAUAFMAoAKACgAoAKACkAUAFABTAKQBTAKQBQAUAFABQAUwCgAoAKACkAUAFAFyx0q51AFod
        gUHGWbGT6ADmonUUdzWnRlPVGjB4XMp2vqMEbf3dvP6kVjLEW2izVYbvJCf8I/bZ2fb2Zz90Rxb8/kea
        ftZb2H7CFviKMmianCgeayljU93GK0VWEnZMwdKa3RHNp11bxiSSPCH+IMCB+VUpJ7CdOSV2XU8OXkrB
        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
</value>
  </data>
</root>